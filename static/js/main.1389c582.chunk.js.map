{"version":3,"sources":["components/global-footer/index.tsx","layout/footer.tsx","components/top-nav-header/index.tsx","layout/header.tsx","components/sider-menu/index.tsx","layout/basic-layout.tsx","components/loading/page-loading/index.tsx","components/grids/grid-content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GlobalFooter","_ref","links","copyright","react_default","a","createElement","className","map","link","key","title","target","blankTarget","href","Footer","FooterView","style","padding","global_footer_GlobalFooter","icon","type","react","TopNavHeader","id","Header","HeaderView","width","zIndex","top_nav_header_TopNavHeader","options","name","Sider","collapsed","handleClick","onCollapse","loadedCsv","current","layout","collapsible","breakpoint","theme","color","fontSize","margin","menu","mode","defaultSelectedKeys","selectedKeys","onClick","option","Item","disabled","Content","Basiclayout","children","_useState","useState","_useState2","Object","slicedToArray","colladpsed","toggle","useEffect","sider_menu_Sider","minHeight","layout_header","footer","page_loading","paddingTop","textAlign","spin","size","GridContent","IntroduceRow","React","lazy","Promise","all","__webpack_require__","e","then","bind","OverViewTab","OverViewWraper","Fragment","fallback","skeleton","paragraph","rows","rangePickerValue","salesData","isActive","handleRangePickerChange","console","log","loading","selectDate","App","react_router_dom","basename","basic_layout_Basiclayout","grid_content_GridContent","to","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6ZAGaA,UAAqD,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,UAC1E,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACfL,GACCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZL,EAAMM,IAAI,SAAAC,GAAI,OACbL,EAAAC,EAAAC,cAAA,KACEI,IAAKD,EAAKC,IACVC,MAAOF,EAAKC,IACZE,OAAQH,EAAKI,YAAc,SAAW,QACtCC,KAAML,EAAKK,MACVL,EAAKE,UAKbR,GAAaC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,MCfxCY,aAgCOC,EA/BI,kBACjBZ,EAAAC,EAAAC,cAACS,EAAD,CAAQE,MAAO,CAAEC,QAAS,IACxBd,EAAAC,EAAAC,cAACa,EAAD,CACEjB,MAAO,CACL,CACEQ,IAAK,WACLC,MAAO,eACPG,KAAM,kCACND,aAAa,GAEf,CACEH,IAAK,SACLC,MAAOP,EAAAC,EAAAC,cAAAc,EAAA,GAAMC,KAAK,WAClBP,KAAM,wDACND,aAAa,GAEf,CACEH,IAAK,SACLC,MAAO,SACPG,KAAM,+DACND,aAAa,IAGjBV,UACEC,EAAAC,EAAAC,cAACgB,EAAA,SAAD,0BACoBlB,EAAAC,EAAAC,cAAAc,EAAA,GAAMC,KAAK,cAD/B,aCpBKE,UAAe,WAC1B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OAAQG,IAAI,OAAOc,GAAG,SAOtCpB,EAAAC,EAAAC,cAAA,iBCdFmB,sBAiBOC,EAfI,WACjB,OACEtB,EAAAC,EAAAC,cAACmB,EAAD,CAAQR,MAAO,CAAEC,QAAS,EAAGS,MAAO,OAAQC,OAAQ,GAAKrB,UAAW,eAClEH,EAAAC,EAAAC,cAACuB,EAAD,yBCGAC,UAAsB,CAC1B,CACEpB,IAAK,aACLU,KAAM,SACNW,KAAM,cAER,CACErB,IAAK,WACLU,KAAM,YACNW,KAAM,YAER,CACErB,IAAK,gBACLU,KAAM,YACNW,KAAM,wBAER,CACErB,IAAK,eACLU,KAAM,aACNW,KAAM,sBAER,CACErB,IAAK,aACLU,KAAM,aACNW,KAAM,mBAER,CACErB,IAAK,YACLU,KAAM,QACNW,KAAM,6BAIGC,EAAQ,SAAA/B,GAAA,IACnBgC,EADmBhC,EACnBgC,UACAC,EAFmBjC,EAEnBiC,YACAC,EAHmBlC,EAGnBkC,WACAC,EAJmBnC,EAInBmC,UACAC,EALmBpC,EAKnBoC,QALmB,OAOnBjC,EAAAC,EAAAC,cAAAgC,EAAA,EAAQN,MAAR,CACEO,aAAW,EACXN,UAAWA,EACXE,WAAYA,EACZK,WAAW,KACXb,MAAO,IACPpB,UAAW,QACXkC,MAAO,QACPrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOiB,GAAG,QACvBpB,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,wDAAwDF,OAAO,WACrER,EAAAC,EAAAC,cAAAc,EAAA,GAAMC,KAAK,SAASJ,MAAO,CAAEyB,MAAO,OAAQC,SAAU,QAASC,OAAQ,eAI3ExC,EAAAC,EAAAC,cAAAuC,EAAA,GACEJ,MAAM,OACNK,KAAK,SACLC,oBAAqB,CAAC,cACtBC,aAAc,CAACX,GACfY,QAASf,GACRJ,EAAQtB,IAAI,SAAA0C,GAAM,OACjB9C,EAAAC,EAAAC,cAAAuC,EAAA,EAAMM,KAAN,CAAWzC,IAAKwC,EAAOxC,IAAK0C,SAAUhB,GACpChC,EAAAC,EAAAC,cAAAc,EAAA,GAAMC,KAAM6B,EAAO9B,OACnBhB,EAAAC,EAAAC,cAAA,YAAO4C,EAAOnB,YCvEhBsB,uBAMKC,EAA+C,SAAArD,GAA+B,IAA5BsD,EAA4BtD,EAA5BsD,SAA4BC,EAC5DC,oBAAkB,GAD0CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClFK,EADkFH,EAAA,GACtEI,EADsEJ,EAAA,GAKzF,OAHAK,oBAAU,WACRD,GAAO,IACN,IAED1D,EAAAC,EAAAC,cAAAgC,EAAA,OACElC,EAAAC,EAAAC,cAAC0D,EAAD,CACE/B,UAAW4B,EACX3B,YAAa,kBAAM4B,GAAQD,IAC3B1B,WAAY,kBAAM2B,GAAQD,IAC1BzB,WAAS,EACTC,QAAQ,aAGVjC,EAAAC,EAAAC,cAAAgC,EAAA,GACErB,MAAO,CACLgD,UAAW,UAEb7D,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC+C,EAAD,CAAS9C,UAAU,WAAWgD,GAC9BnD,EAAAC,EAAAC,cAAC6D,EAAD,2BC7BOC,EAAA,kBACbhE,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEoD,WAAY,IAAKC,UAAW,WACxClE,EAAAC,EAAAC,cAAAiE,EAAA,GAAMC,KAAK,YCDFC,UAA+C,SAAAxE,GAAkB,IAAfsD,EAAetD,EAAfsD,SAC7D,OAAOnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQgD,qBCE1BmB,UAAeC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,cAChCC,EAAcR,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,aAE/BE,EAAiB,kBACrBhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgF,SAAA,KACEjF,EAAAC,EAAAC,cAACgB,EAAA,SAAD,CAAUgE,SAAUlF,EAAAC,EAAAC,cAAC8D,EAAD,OAClBhE,EAAAC,EAAAC,cAACoE,EAAD,OAEFtE,EAAAC,EAAAC,cAACgB,EAAA,SAAD,CAAUgE,SAAUlF,EAAAC,EAAAC,cAAAiF,EAAA,GAAUC,UAAW,CAAEC,KAAM,MAC/CrF,EAAAC,EAAAC,cAAC6E,EAAD,CACEO,iBAAkB,mBAClBC,UAAW,YACXC,SAAU,iBAAM,IAChBC,wBAAyB,kBAAMC,QAAQC,IAAI,wBAC3CC,SAAS,EACTC,WAAY,iBAAM,SAqCXC,EAhCO,WACpB,OACE9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAYC,SAAS,KACnBhG,EAAAC,EAAAC,cAAC+F,EAAD,KACEjG,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAACgB,EAAA,SAAD,CAAUgE,SAAUlF,EAAAC,EAAAC,cAAC8D,EAAD,OAClBhE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMI,GAAG,KAAT,SAEFnG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMI,GAAG,UAAT,UAEFnG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMI,GAAG,UAAT,UAEFnG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMI,GAAG,UAAT,YAKNnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjChF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW,kBAAMvG,EAAAC,EAAAC,cAAA,sBACtCF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW,kBAAMvG,EAAAC,EAAAC,cAAA,sBACtCF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW,kBAAMvG,EAAAC,EAAAC,cAAA,0BC1C5BsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,KAAK,SAAAwC,GACjCA,EAAaC","file":"static/js/main.1389c582.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { GlobalFooterProps } from './index.d';\nimport './index.less';\nexport const GlobalFooter: FunctionComponent<GlobalFooterProps> = ({ links, copyright }) => {\n  return (\n    <footer className='globalFooter'>\n      {links && (\n        <div className='links'>\n          {links.map(link => (\n            <a\n              key={link.key}\n              title={link.key}\n              target={link.blankTarget ? '_blank' : '_self'}\n              href={link.href}>\n              {link.title}\n            </a>\n          ))}\n        </div>\n      )}\n      {copyright && <div className='copyright'>{copyright}</div>}\n    </footer>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Layout, Icon } from 'antd';\nimport { GlobalFooter } from '../components/global-footer';\n\nconst { Footer } = Layout;\nconst FooterView = () => (\n  <Footer style={{ padding: 0 }}>\n    <GlobalFooter\n      links={[\n        {\n          key: 'Download',\n          title: 'Download CSV',\n          href: 'https://dev.twitch.tv/dashboard',\n          blankTarget: true\n        },\n        {\n          key: 'github',\n          title: <Icon type='github' />,\n          href: 'https://github.com/AlbericoD/twitch-extension-analyze',\n          blankTarget: true\n        },\n        {\n          key: 'Issues',\n          title: 'Issues',\n          href: 'https://github.com/AlbericoD/twitch-extension-analyze/issues',\n          blankTarget: true\n        }\n      ]}\n      copyright={\n        <Fragment>\n          Extension Analyze <Icon type='copyright' /> 2019\n        </Fragment>\n      }\n    />\n  </Footer>\n);\nexport default FooterView;\n","import React from 'react';\n// import { Icon } from 'antd';\n\nimport './index.less';\n// import RightContent from './RightContent';\n// import RightContent from '../GlobalHeader/RightContent';\n// import BaseMenu from '../SiderMenu/BaseMenu';\n// import { getFlatMenuKeys } from '../SiderMenu/SiderMenuUtils';\n\nexport const TopNavHeader = () => {\n  return (\n    <div className={`head`}>\n      <div className={`main`}>\n        <div className={'left'}>\n          <div className={'logo'} key='logo' id='logo'>\n            {/* <h1>title</h1> */}\n            {/* <Link to='/'>\n              <img src={logo} alt='logo' />\n              <h1>title</h1>\n            </Link> */}\n          </div>\n          <div>\n            {/* // <BaseMenu {...this.props} flatMenuKeys={flatMenuKeys} className={styles.menu} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Layout } from 'antd';\n// import Animate from 'rc-animate';\n// import { GlobalHeader } from '../components/GlobalHeader';\nimport { TopNavHeader } from '../components/top-nav-header';\nimport './header.less';\n\nconst { Header } = Layout;\n\nconst HeaderView = () => {\n  return (\n    <Header style={{ padding: 0, width: '100%', zIndex: 2 }} className={'fixedHeader'}>\n      <TopNavHeader\n\n      // onCollapse={handleMenuCollapse}\n      // onNoticeClear={this.handleNoticeClear}\n      // onMenuClick={this.handleMenuClick}\n      // onNoticeVisibleChange={this.handleNoticeVisibleChange}\n      // {...this.props}\n      />\n    </Header>\n  );\n};\n\nexport default HeaderView;\n","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport './index.less';\ninterface IProps {\n  collapsed: boolean;\n  handleClick: (event: any) => void;\n  onCollapse: (event: any) => void;\n  loadedCsv: boolean;\n  current: string;\n}\ninterface IOptions {\n  key: string;\n  icon: string;\n  name: string;\n}\nconst options: IOptions[] = [\n  {\n    key: 'upload-csv',\n    icon: 'upload',\n    name: 'Upload CSV'\n  },\n  {\n    key: 'overview',\n    icon: 'dashboard',\n    name: 'Overview'\n  },\n  {\n    key: 'installations',\n    icon: 'bar-chart',\n    name: 'Installations Graph '\n  },\n  {\n    key: 'monetization',\n    icon: 'line-chart',\n    name: 'Monetization Graph'\n  },\n  {\n    key: 'iteraction',\n    icon: 'area-chart',\n    name: 'Iteration Graph'\n  },\n  {\n    key: 'activated',\n    icon: 'table',\n    name: 'Live Activated Channels'\n  }\n];\n\nexport const Sider = ({\n  collapsed,\n  handleClick,\n  onCollapse,\n  loadedCsv,\n  current\n}: IProps): JSX.Element => (\n  <Layout.Sider\n    collapsible\n    collapsed={collapsed}\n    onCollapse={onCollapse}\n    breakpoint='lg'\n    width={256}\n    className={'sider'}\n    theme={'dark'}>\n    <div className='logo' id='logo'>\n      <a href='https://github.com/AlbericoD/twitch-extension-analyze' target='__blank'>\n        <Icon type='github' style={{ color: '#fff', fontSize: '1.5em', margin: '5px 6px' }} />\n      </a>\n    </div>\n\n    <Menu\n      theme='dark'\n      mode='inline'\n      defaultSelectedKeys={['upload-csv']}\n      selectedKeys={[current]}\n      onClick={handleClick}>\n      {options.map(option => (\n        <Menu.Item key={option.key} disabled={loadedCsv}>\n          <Icon type={option.icon} />\n          <span>{option.name}</span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  </Layout.Sider>\n);\n","import React, { FunctionComponent, ReactNode, useEffect, useState } from 'react';\nimport { Layout } from 'antd';\nimport Footer from './footer';\nimport Header from './header';\nimport { Sider } from '../components/sider-menu';\nimport './basic-layout.less';\n\nconst { Content } = Layout;\ninterface IBasicLayout {\n  children: ReactNode;\n}\n\nconst handle = () => console.log('handle');\nexport const Basiclayout: FunctionComponent<IBasicLayout> = ({ children }): JSX.Element => {\n  const [colladpsed, toggle] = useState<boolean>(false);\n  useEffect(() => {\n    toggle(true);\n  }, []);\n  return (\n    <Layout>\n      <Sider\n        collapsed={colladpsed}\n        handleClick={() => toggle(!colladpsed)}\n        onCollapse={() => toggle(!colladpsed)}\n        loadedCsv\n        current='overview'\n      />\n\n      <Layout\n        style={{\n          minHeight: '100vh'\n        }}>\n        <Header />\n        <Content className='content'>{children}</Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { Spin } from 'antd';\n\n// loading components from code split\n// https://umijs.org/plugin/umi-plugin-react.html#dynamicimport\nexport default (): JSX.Element => (\n  <div style={{ paddingTop: 100, textAlign: 'center' }}>\n    <Spin size='large' />\n  </div>\n);\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport './index.less';\n\ninterface IGridContent {\n  children: ReactNode;\n}\nexport const GridContent: FunctionComponent<IGridContent> = ({ children }) => {\n  return <div className='main'>{children}</div>;\n};\n","import React, { Suspense } from 'react';\nimport { Basiclayout } from './layout/basic-layout';\nimport PageLoading from './components/loading/page-loading';\nimport { GridContent } from './components/grids/grid-content';\nimport { Skeleton } from 'antd';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport './app.less';\n\nconst IntroduceRow = React.lazy(() => import('./components/introduce-row'));\nconst OverViewTab = React.lazy(() => import('./components/graphs/overview'));\n\nconst OverViewWraper = () => (\n  <>\n    <Suspense fallback={<PageLoading />}>\n      <IntroduceRow />\n    </Suspense>\n    <Suspense fallback={<Skeleton paragraph={{ rows: 4 }} />}>\n      <OverViewTab\n        rangePickerValue={'rangePickerValue'}\n        salesData={'salesData'}\n        isActive={() => ''}\n        handleRangePickerChange={() => console.log('handle range picker')}\n        loading={false}\n        selectDate={() => ''}\n      />\n    </Suspense>\n  </>\n);\nconst App: React.FC = () => {\n  return (\n    <HashRouter basename='/'>\n      <Basiclayout>\n        <GridContent>\n          <Suspense fallback={<PageLoading />}>\n            <ul>\n              <li>\n                <Link to='/'>Home</Link>\n              </li>\n              <li>\n                <Link to='/about'>About</Link>\n              </li>\n              <li>\n                <Link to='/lorem'>lorem</Link>\n              </li>\n              <li>\n                <Link to='/ipsum'>ipsum</Link>\n              </li>\n            </ul>\n          </Suspense>\n\n          <Route exact path='/' component={OverViewWraper} />\n          <Route path='/about' component={() => <h1>about</h1>} />\n          <Route path='/lorem' component={() => <h1>lorem</h1>} />\n          <Route path='/ipsum' component={() => <h1>ipsum</h1>} />\n        </GridContent>\n      </Basiclayout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}