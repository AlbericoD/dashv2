{"version":3,"sources":["components/graphs/overview/index.tsx"],"names":["Bar","React","lazy","Promise","all","__webpack_require__","e","then","bind","RangePicker","TabPane","rankingListData","i","push","title","total","dataSource","key","date","ext-details","ext-unique-details","columns","dataIndex","OverView","memo","_ref","rangePickerValue","salesData","isActive","handleRangePickerChange","loading","selectDate","react__WEBPACK_IMPORTED_MODULE_14___default","a","createElement","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","bordered","bodyStyle","padding","className","antd_es_tabs__WEBPACK_IMPORTED_MODULE_11__","tabBarExtraContent","antd_es_button__WEBPACK_IMPORTED_MODULE_9__","Group","size","type","value","moment","Date","now","onChange","style","width","tabBarStyle","marginBottom","tab","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","antd_es_col__WEBPACK_IMPORTED_MODULE_7__","xl","lg","md","sm","xs","antd_es_table__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"static/js/8.ae0301bb.chunk.js","sourcesContent":["import React, { memo, NamedExoticComponent } from 'react';\nimport { Row, Col, Card, Tabs, DatePicker, Table, Button, Icon } from 'antd';\nimport moment from 'moment';\n// import { FormattedMessage, formatMessage } from 'umi-plugin-react/locale';\n// import numeral from 'numeral';\n// import './index.less';\n\nconst Bar = React.lazy(() => import('./chart'));\nconst { RangePicker } = DatePicker;\nconst { TabPane } = Tabs;\n\nconst rankingListData: any[] = [];\nfor (let i = 0; i < 7; i += 1) {\n  rankingListData.push({\n    title: '0/' + i + '/05/2019',\n    total: 323234\n  });\n}\nconst dataSource = [\n  {\n    key: '1',\n    date: '01/05/2019',\n    'ext-details': 46,\n    'ext-unique-details': 32\n  },\n  {\n    key: '2',\n    date: '01/05/2019',\n    'ext-details': 46,\n    'ext-unique-details': 32\n  },\n  {\n    key: '3',\n    date: '01/05/2019',\n    'ext-details': 46,\n    'ext-unique-details': 32\n  },\n  {\n    key: '4',\n    date: '01/05/2019',\n    'ext-details': 46,\n    'ext-unique-details': 32\n  },\n  {\n    key: '5',\n    date: '01/05/2019',\n    'ext-details': 46,\n    'ext-unique-details': 32\n  }\n];\n\nconst columns = [\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date'\n  },\n  {\n    title: 'Extension Details Page Visits',\n    dataIndex: 'ext-details',\n    key: 'ext-details'\n  },\n  {\n    title: 'Unique Extension Details Page Visits',\n    dataIndex: 'ext-unique-details',\n    key: 'ext-unique-details'\n  }\n];\n\ninterface IOverView {\n  rangePickerValue: any;\n  salesData: any;\n  isActive: (value: string) => string;\n  handleRangePickerChange: () => void;\n  loading: boolean;\n  selectDate: (value: string) => string;\n}\nconst OverView: NamedExoticComponent<IOverView> = memo(\n  ({ rangePickerValue, salesData, isActive, handleRangePickerChange, loading, selectDate }) => (\n    <Card loading={loading} bordered={false} bodyStyle={{ padding: 0 }}>\n      <div className={'salesCard'}>\n        <Tabs\n          tabBarExtraContent={\n            <div className={'salesExtraWrap'}>\n              <div className={'salesExtra'}>\n                <Button.Group size={'small'}>\n                  <Button type='default'>\n                    Last Day\n                    {/* <a className={'today'} onClick={() => selectDate('today')}>\n                    </a> */}\n                  </Button>\n                  <Button type='default'>Last 7 Days</Button>\n                  <Button type='default'>Last 30 Days</Button>\n                  <Button type='default'>First Extension Release - Last Date CSV</Button>\n                </Button.Group>\n              </div>\n              <RangePicker\n                value={[moment(Date.now()), moment(Date.now())]}\n                onChange={handleRangePickerChange}\n                style={{ width: 256 }}\n              />\n            </div>\n          }\n          size='large'\n          tabBarStyle={{ marginBottom: 24 }}>\n          <TabPane tab={'Installations'} key='sales'>\n            <Row>\n              <Col xl={16} lg={12} md={12} sm={24} xs={24}>\n                <div className={'salesBar'}>\n                  <Bar />\n                </div>\n              </Col>\n              <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n                <div className={'salesRank'}>\n                  <Table dataSource={dataSource} columns={columns} />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tab={'Monetization'} key='views'>\n            <Row>\n              <Col xl={16} lg={12} md={12} sm={24} xs={24}>\n                <div className={'salesBar'}>\n                  <Bar />\n                </div>\n              </Col>\n              <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n                <div className={'salesRank'}>\n                  <Table dataSource={dataSource} columns={columns} />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      </div>\n    </Card>\n  )\n);\n\nexport default OverView;\n"],"sourceRoot":""}